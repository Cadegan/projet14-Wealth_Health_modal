{"version":3,"file":"static/js/387.dd24d76c.chunk.js","mappings":"oQAgBMA,EAAW,SAAH,GAA2C,IAArCC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAClCC,GAAgBC,EAAAA,EAAAA,UACpB,kBAAMC,EAAAA,MAAAA,CAA0D,GAChE,IAGF,OACE,gBAAKC,UAAS,UAAKN,GAAO,UACxB,SAACO,EAAA,EAAoB,CAACC,YAAaL,EAAc,UAC/C,SAAC,KAAU,CACTH,KAAI,mBAAcA,GAClBD,QAASA,EACTU,aAAc,KACdC,MAAO,CACLC,SAAU,CACRC,QAAS,WACTC,OAAO,IAGXC,OAAQ,oBACNC,MAASC,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAK,IACxBI,WAAcC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAAO,OAE5B,SAACC,EAAA,EAAgB,CACflB,QAASA,EACTS,UAAU,EACVE,MAAOA,EACPZ,MAAK,UAAKA,EAAK,MACfoB,aAAcrB,EACdsB,YAAY,aACZC,aAAa,WACbP,SAAUA,EACVQ,oBAAqB,CACnB,aAAc,eAEhBC,YAAa,SAACC,GAAM,OAClB,SAACC,EAAA,GAAS,gBACRC,GAAI5B,EACJ,aAAYA,EACZ6B,QAAQ,WACRC,WAAS,EACTC,MAAM,WACFL,GAAM,IACVM,GAAI,CACF,qBAAsB,CACpB,yBAA0B,CACxBC,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,SAIlBjB,MAAOC,EACPiB,WAAYjB,EAAUD,EAAMN,QAAU,MAC3B,GAEG,OAMhC,EAEA,EAAeyB,EAAAA,KAAWvC,G,wCChFbwC,EAAsB,CACjC,CACEtC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,SACNuC,aAAc,MAEhB,CACEvC,KAAM,iBACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,aACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,cACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,uBACNuC,aAAc,MAEhB,CACEvC,KAAM,iCACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,OACNuC,aAAc,MAEhB,CACEvC,KAAM,SACNuC,aAAc,MAEhB,CACEvC,KAAM,QACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,OACNuC,aAAc,MAEhB,CACEvC,KAAM,SACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,YACNuC,aAAc,MAEhB,CACEvC,KAAM,QACNuC,aAAc,MAEhB,CACEvC,KAAM,mBACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,gBACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,YACNuC,aAAc,MAEhB,CACEvC,KAAM,cACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,SACNuC,aAAc,MAEhB,CACEvC,KAAM,gBACNuC,aAAc,MAEhB,CACEvC,KAAM,aACNuC,aAAc,MAEhB,CACEvC,KAAM,aACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,iBACNuC,aAAc,MAEhB,CACEvC,KAAM,eACNuC,aAAc,MAEhB,CACEvC,KAAM,2BACNuC,aAAc,MAEhB,CACEvC,KAAM,OACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,SACNuC,aAAc,MAEhB,CACEvC,KAAM,QACNuC,aAAc,MAEhB,CACEvC,KAAM,eACNuC,aAAc,MAEhB,CACEvC,KAAM,cACNuC,aAAc,MAEhB,CACEvC,KAAM,eACNuC,aAAc,MAEhB,CACEvC,KAAM,iBACNuC,aAAc,MAEhB,CACEvC,KAAM,eACNuC,aAAc,MAEhB,CACEvC,KAAM,YACNuC,aAAc,MAEhB,CACEvC,KAAM,QACNuC,aAAc,MAEhB,CACEvC,KAAM,OACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,MAEhB,CACEvC,KAAM,iBACNuC,aAAc,MAEhB,CACEvC,KAAM,WACNuC,aAAc,MAEhB,CACEvC,KAAM,aACNuC,aAAc,MAEhB,CACEvC,KAAM,gBACNuC,aAAc,MAEhB,CACEvC,KAAM,YACNuC,aAAc,MAEhB,CACEvC,KAAM,UACNuC,aAAc,O,UCpOZC,GAAYC,EAAAA,EAAAA,GAAW,CAC3BC,mBAAkB,uBACTC,EAAAA,EAAAA,KAAyB,YAAIA,EAAAA,EAAAA,QAA4B,aAAKA,EAAAA,EAAAA,gBACnE,CACEV,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,UAadS,EAAQ,SAAH,GAA4B,IAAtB7C,EAAO,EAAPA,QAASE,EAAK,EAALA,MAClB4C,EAAUL,IAUhB,OACE,gBAAKlC,UAAU,QAAO,UACpB,SAAC,KAAU,CACTN,KAAK,gBACLD,QAASA,EACTU,aAAc,GACdC,MAAO,CACLC,SAAU,CACRC,QAAQ,GAAD,OAAKX,EAAK,aACjBY,OAAO,IAGXC,OAAQ,gBAAGC,EAAK,EAALA,MAAqBG,EAAK,EAAnBD,WAAcC,MAAK,OACnC,SAAC4B,EAAA,GAAY,CACXC,QAAST,EAKTzB,MAAOE,EAAMF,OAAS,KACtBmC,eAAgB,SAACC,GAAM,OAAKA,EAAOjD,IAAI,EACvCkD,aAAc,SAACD,GAAM,OAAK,0BAAOA,EAAOjD,MAAY,EACpDyB,YAAa,SAACC,GAAM,OAClB,SAAC,KACC,gBACApB,UAAWuC,EAAQH,mBACfhB,GAAM,IACVzB,MAAOA,EACP,aAAY,SACZ4B,QAAQ,WACRlB,UAAU,EACVO,QAASA,EACTkB,WAAYlB,EAAQA,EAAMN,QAAU,MACzB,EAEfI,SAAU,SAACmC,EAAGtC,GAAK,OAAKE,EAAMC,SAASH,EAAM,GAC/B,KAK1B,EAEA,EAAewB,EAAAA,KAAWO,GCnEpBQ,EAAgB,SAAH,GAAkC,IAA5BrD,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACtC,OACE,gBAAKK,UAAS,UAAKN,EAAI,WAAU,UAC/B,SAAC,KAAU,CACTA,KAAI,mBAAcA,GAClBD,QAASA,EACTU,aAAc,GACdC,MAAO,CACLC,SAAU,CACRC,QAAQ,GAAD,OAAKX,EAAK,aACjBY,OAAO,GAETwC,QAAS,CACPxC,MAAO,iEACPD,QAAS,kCAEX0C,UAAW,CACTzC,MAAO,EACPD,QAAS,sCAEX2C,UAAW,CACT1C,MAAO,GACPD,QAAS,yCAGbE,OAAQ,oBAAGC,MAASC,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAuBK,EAAK,EAAnBD,WAAcC,MAAK,OACxD,SAACS,EAAA,EAAS,CACRK,GAAI,CACF,iCAAkC,CAChCC,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,OAEd,mCAAoC,CAClCF,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,QAGhBL,WAAS,EACTnB,UAAU,EACVE,MAAOA,EACPe,GAAI5B,EACJ,aAAYA,EACZC,MAAOA,EACPe,SAAUA,EACVwC,WAAY,CACVH,QAAS,mEAEXnC,QAASA,EACTkB,WAAYlB,EAAQA,EAAMN,QAAU,KACpC,KAKZ,EAEA,EAAeyB,EAAAA,KAAWe,GCgB1B,EAtEgBf,EAAAA,MACd,YAQO,IAPLtC,EAAO,EAAPA,QACA0D,EAAiB,EAAjBA,kBACAC,EAAiB,EAAjBA,kBACAJ,EAAS,EAATA,UACAC,EAAS,EAATA,UACAvD,EAAI,EAAJA,KACAC,EAAK,EAALA,MAEA,OACE,SAAC,WAAc,WACb,gBAAKK,UAAS,UAAKN,GAAO,UACxB,SAAC,KAAU,CACTA,KAAI,kBAAaA,GACjBD,QAASA,EACTU,aAAc,GACdC,MAAO,CACLC,SAAU,CACRC,QAAQ,GAAD,OAAKX,EAAK,aACjBY,OAAO,GAETwC,QAAS,CACPxC,MAAO4C,EACP7C,QAAS,kCAEX0C,UAAW,CACTzC,MAAOyC,EACP1C,QAAQ,yBAAD,OAA2B0C,EAAS,gBAE7CC,UAAW,CACT1C,MAAO0C,EACP3C,QAAQ,0BAAD,OAA4B2C,EAAS,iBAGhDzC,OAAQ,oBAAGC,MAASC,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAuBK,EAAK,EAAnBD,WAAcC,MAAK,OACxD,SAACS,EAAA,EAAS,CACRK,GAAI,CACF,iCAAkC,CAChCC,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,OAEd,mCAAoC,CAClCF,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,QAGhBL,WAAS,EACTnB,UAAU,EACVE,MAAOA,EACPe,GAAI5B,EACJ,aAAYA,EACZC,MAAOA,EACPe,SAAUA,EACVwC,WAAY,CACVH,QAASK,GAEXxC,QAASA,EACTkB,WAAYlB,EAAQA,EAAMN,QAAU,KACpC,OAMd,I,UCpFW+C,EAAuB,CAClC,CACE9C,MAAO,QACPZ,MAAO,SAET,CACEY,MAAO,YACPZ,MAAO,aAET,CACEY,MAAO,cACPZ,MAAO,eAET,CACEY,MAAO,iBACPZ,MAAO,mBAET,CACEY,MAAO,QACPZ,MAAO,UCNL2D,EAAa,SAAH,GAAqB,IAAf7D,EAAO,EAAPA,QACpB,OACE,gBAAKO,UAAU,aAAY,UACzB,SAAC,KAAU,CACTN,KAAK,aACLD,QAASA,EACTU,aAAc,GACdC,MAAO,CACLC,SAAU,CACRC,QAAS,WACTC,OAAO,IAGXC,OAAQ,oBAAGC,MAASC,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAuBK,EAAK,EAAnBD,WAAcC,MAAK,OACxD,SAACS,EAAA,EAAS,CACRK,GAAI,CACF,qBAAsB,CACpB,yBAA0B,CACxBC,gBAAiB,EACjBC,QAAS,iBACTC,WAAY,SAIlB0B,QAAM,EACN/B,WAAS,EACTnB,UAAU,EACVE,MAAOA,EACPe,GAAG,aACH3B,MAAM,aACN,aAAW,aACXe,SAAUA,EACVE,QAASA,EACTkB,WAAYlB,EAAQA,EAAMN,QAAU,IAAI,SAEvC+C,EAAqBG,KAAI,SAACb,GAAM,OAC/B,SAACc,EAAA,EAAQ,CAAoBlD,MAAOoC,EAAOpC,MAAM,SAC9CoC,EAAOhD,OADKgD,EAAOpC,MAEX,KAEH,KAKtB,EAEA,EAAewB,EAAAA,KAAWuB,G,oEC1CpBpB,GAAYC,EAAAA,EAAAA,IAAW,SAACuB,GAAK,MAAM,CACvCC,YAAa,CACXC,OAAQF,EAAMG,QAAQ,GACtBjC,QAAS8B,EAAMG,QAAQ,IAE1B,IAEc,SAASC,IACtB,IAAMvB,EAAUL,IAChB,GAAkC6B,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KACxBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,aAAc,MACdC,KAAM,aANNC,EAAY,EAAZA,aACAC,EAAK,EAALA,MACA/E,EAAO,EAAPA,QACagF,EAAO,EAApBC,UAAaD,QAOTE,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCX,GAASY,EAAAA,EAAAA,IAAYD,IACrBZ,GAAa,GACbO,GACF,GACA,CAACN,EAAUM,IAGb,OACE,+BACE,iBAAKxE,UAAU,YAAW,WACxB,kBACEA,UAAWuC,EAAQoB,YACnBrC,GAAG,kBACHqD,SAAUJ,EAAaI,GAAU,WAEjC,UAACI,EAAA,GAAI,CAACC,WAAS,EAACnB,QAAS,EAAGoB,eAAe,SAAQ,WACjD,UAACF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAG,WACvB,SAACC,EAAa,CACZ5F,QAASA,EACTC,KAAK,YACLC,MAAM,gBAER,SAAC0F,EAAa,CACZ5F,QAASA,EACTC,KAAK,WACLC,MAAM,kBAGV,UAACoF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAG,WACvB,SAAC,EAAQ,CACP3F,QAASA,EACTC,KAAK,WACLC,MAAM,gBACNC,QAAS0F,MAASC,SAAS,GAAI,YAGjC,SAAC,EAAQ,CAAC9F,QAASA,EAASC,KAAK,YAAYC,MAAM,mBAErD,UAACoF,EAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAG,WACvB,oCACA,SAAC,EAAO,CACN3F,QAASA,EACT0D,kBACE,+EAEFC,kBAAkB,kFAClBJ,UAAU,IACVC,UAAU,KACVvD,KAAK,SACLC,MAAM,YAER,SAAC,EAAO,CACNF,QAASA,EACT0D,kBACE,yEAEFC,kBAAkB,4EAClBJ,UAAU,IACVC,UAAU,KACVvD,KAAK,OACLC,MAAM,UAER,SAAC6F,EAAM,CAAC/F,QAASA,EAASE,MAAM,YAEhC,SAAC,EAAO,CACNF,QAASA,EACT0D,kBAAmB,6CACnBC,kBAAkB,0BAClBJ,UAAU,IACVC,UAAU,IACVvD,KAAK,UACLC,MAAM,cAER,SAAC8F,EAAW,CAAChG,QAASA,WAG1B,SAACiG,EAAA,EAAM,CACLC,KAAK,SACLlE,MAAM,UACNF,QAAQ,YACRqE,UAAWnB,EACX/C,GAAI,CAAEmE,GAAI,GAAI,sBAKlB,SAAC,IAAK,CAACC,UAAW9B,EAAW+B,WAAY,kBAAM9B,GAAa,EAAM,EAAC,SAChE,kCAKX,C","sources":["components/Calendar/index.jsx","services/states.js","components/States/index.jsx","components/Identity/index.jsx","components/Address/index.jsx","services/departments.js","components/Departments/index.jsx","pages/Home/index.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { LocalizationProvider, MobileDatePicker } from \"@mui/x-date-pickers\";\nimport { TextField } from \"@mui/material\";\nimport \"./calendar.css\";\n\n/**\n * @description A calendar input for a form.\n *\n * @param {Object} props - The props for the component.\n * @param {Object} props.control - The control object from `react-hook-form`.\n * @param {string} props.name - The name of the field.\n * @param {string} props.label - The label for the field.\n * @param {Date} props.maxDate - The maximum date that can be selected.\n * @returns {React.Component} The rendered `Calendar` component.\n */\nconst Calendar = ({ control, name, label, maxDate }) => {\n  const AdapterMoment = useMemo(\n    () => require(\"@mui/x-date-pickers/AdapterMoment\").AdapterMoment,\n    []\n  );\n\n  return (\n    <div className={`${name}`}>\n      <LocalizationProvider dateAdapter={AdapterMoment}>\n        <Controller\n          name={`identity.${name}`}\n          control={control}\n          defaultValue={null}\n          rules={{\n            required: {\n              message: \"Required\",\n              value: true,\n            },\n          }}\n          render={({\n            field: { onChange, value },\n            fieldState: { error, invalid },\n          }) => (\n            <MobileDatePicker\n              maxDate={maxDate}\n              required={true}\n              value={value}\n              label={`${label} *`}\n              autoComplete={name}\n              inputFormat=\"MM/DD/YYYY\"\n              inputVariant=\"outlined\"\n              onChange={onChange}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n              renderInput={(params) => (\n                <TextField\n                  id={name}\n                  aria-label={name}\n                  variant=\"outlined\"\n                  fullWidth\n                  color=\"primary\"\n                  {...params}\n                  sx={{\n                    \".MuiInputBase-root\": {\n                      \"&.Mui-focused fieldset\": {\n                        borderLeftWidth: 6,\n                        padding: \"4px !important\",\n                        transition: \".3s\",\n                      },\n                    },\n                  }}\n                  error={invalid}\n                  helperText={invalid ? error.message : \" \"}\n                ></TextField>\n              )}\n            ></MobileDatePicker>\n          )}\n        ></Controller>\n      </LocalizationProvider>\n    </div>\n  );\n};\n\nexport default React.memo(Calendar);\n","export const getStatesCollection = [\n  {\n    name: \"Alabama\",\n    abbreviation: \"AL\",\n  },\n  {\n    name: \"Alaska\",\n    abbreviation: \"AK\",\n  },\n  {\n    name: \"American Samoa\",\n    abbreviation: \"AS\",\n  },\n  {\n    name: \"Arizona\",\n    abbreviation: \"AZ\",\n  },\n  {\n    name: \"Arkansas\",\n    abbreviation: \"AR\",\n  },\n  {\n    name: \"California\",\n    abbreviation: \"CA\",\n  },\n  {\n    name: \"Colorado\",\n    abbreviation: \"CO\",\n  },\n  {\n    name: \"Connecticut\",\n    abbreviation: \"CT\",\n  },\n  {\n    name: \"Delaware\",\n    abbreviation: \"DE\",\n  },\n  {\n    name: \"District Of Columbia\",\n    abbreviation: \"DC\",\n  },\n  {\n    name: \"Federated States Of Micronesia\",\n    abbreviation: \"FM\",\n  },\n  {\n    name: \"Florida\",\n    abbreviation: \"FL\",\n  },\n  {\n    name: \"Georgia\",\n    abbreviation: \"GA\",\n  },\n  {\n    name: \"Guam\",\n    abbreviation: \"GU\",\n  },\n  {\n    name: \"Hawaii\",\n    abbreviation: \"HI\",\n  },\n  {\n    name: \"Idaho\",\n    abbreviation: \"ID\",\n  },\n  {\n    name: \"Illinois\",\n    abbreviation: \"IL\",\n  },\n  {\n    name: \"Indiana\",\n    abbreviation: \"IN\",\n  },\n  {\n    name: \"Iowa\",\n    abbreviation: \"IA\",\n  },\n  {\n    name: \"Kansas\",\n    abbreviation: \"KS\",\n  },\n  {\n    name: \"Kentucky\",\n    abbreviation: \"KY\",\n  },\n  {\n    name: \"Louisiana\",\n    abbreviation: \"LA\",\n  },\n  {\n    name: \"Maine\",\n    abbreviation: \"ME\",\n  },\n  {\n    name: \"Marshall Islands\",\n    abbreviation: \"MH\",\n  },\n  {\n    name: \"Maryland\",\n    abbreviation: \"MD\",\n  },\n  {\n    name: \"Massachusetts\",\n    abbreviation: \"MA\",\n  },\n  {\n    name: \"Michigan\",\n    abbreviation: \"MI\",\n  },\n  {\n    name: \"Minnesota\",\n    abbreviation: \"MN\",\n  },\n  {\n    name: \"Mississippi\",\n    abbreviation: \"MS\",\n  },\n  {\n    name: \"Missouri\",\n    abbreviation: \"MO\",\n  },\n  {\n    name: \"Montana\",\n    abbreviation: \"MT\",\n  },\n  {\n    name: \"Nebraska\",\n    abbreviation: \"NE\",\n  },\n  {\n    name: \"Nevada\",\n    abbreviation: \"NV\",\n  },\n  {\n    name: \"New Hampshire\",\n    abbreviation: \"NH\",\n  },\n  {\n    name: \"New Jersey\",\n    abbreviation: \"NJ\",\n  },\n  {\n    name: \"New Mexico\",\n    abbreviation: \"NM\",\n  },\n  {\n    name: \"New York\",\n    abbreviation: \"NY\",\n  },\n  {\n    name: \"North Carolina\",\n    abbreviation: \"NC\",\n  },\n  {\n    name: \"North Dakota\",\n    abbreviation: \"ND\",\n  },\n  {\n    name: \"Northern Mariana Islands\",\n    abbreviation: \"MP\",\n  },\n  {\n    name: \"Ohio\",\n    abbreviation: \"OH\",\n  },\n  {\n    name: \"Oklahoma\",\n    abbreviation: \"OK\",\n  },\n  {\n    name: \"Oregon\",\n    abbreviation: \"OR\",\n  },\n  {\n    name: \"Palau\",\n    abbreviation: \"PW\",\n  },\n  {\n    name: \"Pennsylvania\",\n    abbreviation: \"PA\",\n  },\n  {\n    name: \"Puerto Rico\",\n    abbreviation: \"PR\",\n  },\n  {\n    name: \"Rhode Island\",\n    abbreviation: \"RI\",\n  },\n  {\n    name: \"South Carolina\",\n    abbreviation: \"SC\",\n  },\n  {\n    name: \"South Dakota\",\n    abbreviation: \"SD\",\n  },\n  {\n    name: \"Tennessee\",\n    abbreviation: \"TN\",\n  },\n  {\n    name: \"Texas\",\n    abbreviation: \"TX\",\n  },\n  {\n    name: \"Utah\",\n    abbreviation: \"UT\",\n  },\n  {\n    name: \"Vermont\",\n    abbreviation: \"VT\",\n  },\n  {\n    name: \"Virgin Islands\",\n    abbreviation: \"VI\",\n  },\n  {\n    name: \"Virginia\",\n    abbreviation: \"VA\",\n  },\n  {\n    name: \"Washington\",\n    abbreviation: \"WA\",\n  },\n  {\n    name: \"West Virginia\",\n    abbreviation: \"WV\",\n  },\n  {\n    name: \"Wisconsin\",\n    abbreviation: \"WI\",\n  },\n  {\n    name: \"Wyoming\",\n    abbreviation: \"WY\",\n  },\n];\n","import React from \"react\";\nimport { makeStyles, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Controller } from \"react-hook-form\";\nimport { getStatesCollection } from \"../../services/states\";\nimport { outlinedInputClasses } from \"@mui/material/OutlinedInput\";\n\nconst useStyles = makeStyles({\n  autocompleteClass: {\n    [`& .${outlinedInputClasses.root}.${outlinedInputClasses.focused} .${outlinedInputClasses.notchedOutline}`]:\n      {\n        borderLeftWidth: 6,\n        padding: \"4px !important\",\n        transition: \".3s\",\n      },\n  },\n});\n\n/**\n * @description A component for selecting a state from a list of options.\n *\n * @param {Object} props - The props for the component.\n * @param {Object} props.control - The control object from `react-hook-form`.\n * @param {string} props.label - The label for the field.\n * @returns {React.Component} The rendered `States` component\n */\nconst State = ({ control, label }) => {\n  const classes = useStyles();\n\n  /* Decomment here and the second option in Autocomplete to group names by their first letter */\n  // const options = getStatesCollection.map((option) => {\n  //   const firstLetter = option.name[0].toUpperCase();\n  //   return {\n  //     firstLetter,\n  //     ...option,\n  //   };\n  // });\n  return (\n    <div className=\"state\">\n      <Controller\n        name=\"address.state\"\n        control={control}\n        defaultValue={\"\"}\n        rules={{\n          required: {\n            message: `${label} required`,\n            value: true,\n          },\n        }}\n        render={({ field, fieldState: { error } }) => (\n          <Autocomplete\n            options={getStatesCollection}\n            // options={options.sort(\n            //   (a, b) => -b.firstLetter.localeCompare(a.firstLetter)\n            // )}\n            // groupBy={(option) => option.firstLetter}\n            value={field.value || null}\n            getOptionLabel={(option) => option.name}\n            renderOption={(option) => <span>{option.name}</span>}\n            renderInput={(params) => (\n              <TextField\n                // style={{ backgroundColor: \"pink\" }}\n                className={classes.autocompleteClass}\n                {...params}\n                label={label}\n                aria-label={\"states\"}\n                variant=\"outlined\"\n                required={true}\n                error={!!error}\n                helperText={error ? error.message : \" \"}\n              ></TextField>\n            )}\n            onChange={(_, value) => field.onChange(value)}\n          ></Autocomplete>\n        )}\n      ></Controller>\n    </div>\n  );\n};\n\nexport default React.memo(State);\n","import { Controller } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n/**\n * @description Input for identity\n *\n * @param {Object} props - The props for the component.\n * @param {Object} props.control - The control object from `react-hook-form`.\n * @param {string} props.name - The name of the field.\n * @param {string} props.label - The label for the field.\n * @returns {React.Component} The IdentityInput component.\n */\nconst IdentityInput = ({ control, name, label }) => {\n  return (\n    <div className={`${name}Section`}>\n      <Controller\n        name={`identity.${name}`}\n        control={control}\n        defaultValue={\"\"}\n        rules={{\n          required: {\n            message: `${label} required`,\n            value: true,\n          },\n          pattern: {\n            value: /^(?!.* {2})[A-zÀ-ž-' ]*((-|\\s)*[A-zÀ-ž-' ])*$/g,\n            message: \"Special characters not allowed\",\n          },\n          minLength: {\n            value: 2,\n            message: \"Please enter at least 2 characters\",\n          },\n          maxLength: {\n            value: 50,\n            message: \"Please enter less than 50 characters\",\n          },\n        }}\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <TextField\n            sx={{\n              \"& input:valid:focus + fieldset\": {\n                borderLeftWidth: 6,\n                padding: \"4px !important\",\n                transition: \".3s\",\n              },\n              \"& input:invalid:focus + fieldset\": {\n                borderLeftWidth: 6,\n                padding: \"4px !important\",\n                transition: \".3s\",\n              },\n            }}\n            fullWidth\n            required={true}\n            value={value}\n            id={name}\n            aria-label={name}\n            label={label}\n            onChange={onChange}\n            inputProps={{\n              pattern: \"(?!.* {2})[A-zÀ-ž-' ]*((-|s)*[A-zÀ-ž-' ]){2,50}\",\n            }}\n            error={!!error}\n            helperText={error ? error.message : \" \"}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(IdentityInput);\n","import { Controller } from \"react-hook-form\";\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\n/**\n * @description A form input for an address field.\n *\n * @param {Object} props - The props for the component.\n * @param {Object} props.control - The control object from `react-hook-form`.\n * @param {string} props.controllerPattern - The pattern to use for the `Controller`.\n * @param {string} props.inputPropsPattern - The pattern to use for the `inputProps`.\n * @param {number} props.minLength - The minimum length for the field.\n * @param {number} props.maxLength - The maximum length for the field.\n * @param {string} props.name - The name of the field.\n * @param {string} props.label - The label for the field.\n * @returns {React.Component} The rendered `Address` component.\n */\nconst Address = React.memo(\n  ({\n    control,\n    controllerPattern,\n    inputPropsPattern,\n    minLength,\n    maxLength,\n    name,\n    label,\n  }) => {\n    return (\n      <React.Fragment>\n        <div className={`${name}`}>\n          <Controller\n            name={`address.${name}`}\n            control={control}\n            defaultValue={\"\"}\n            rules={{\n              required: {\n                message: `${label} required`,\n                value: true,\n              },\n              pattern: {\n                value: controllerPattern,\n                message: \"Special characters not allowed\",\n              },\n              minLength: {\n                value: minLength,\n                message: `Please enter at least ${minLength} characters`,\n              },\n              maxLength: {\n                value: maxLength,\n                message: `Please enter less than ${maxLength} characters`,\n              },\n            }}\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\n              <TextField\n                sx={{\n                  \"& input:valid:focus + fieldset\": {\n                    borderLeftWidth: 6,\n                    padding: \"4px !important\",\n                    transition: \".3s\",\n                  },\n                  \"& input:invalid:focus + fieldset\": {\n                    borderLeftWidth: 6,\n                    padding: \"4px !important\",\n                    transition: \".3s\",\n                  },\n                }}\n                fullWidth\n                required={true}\n                value={value}\n                id={name}\n                aria-label={name}\n                label={label}\n                onChange={onChange}\n                inputProps={{\n                  pattern: inputPropsPattern,\n                }}\n                error={!!error}\n                helperText={error ? error.message : \" \"}\n              />\n            )}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n);\n\nexport default Address;\n","export const departmentCollection = [\n  {\n    value: \"sales\",\n    label: \"Sales\",\n  },\n  {\n    value: \"marketing\",\n    label: \"Marketing\",\n  },\n  {\n    value: \"engineering\",\n    label: \"Engineering\",\n  },\n  {\n    value: \"humanResources\",\n    label: \"Human Resources\",\n  },\n  {\n    value: \"legal\",\n    label: \"Legal\",\n  },\n];\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Controller } from \"react-hook-form\";\nimport { departmentCollection } from \"../../services/departments\";\n\n/**\n * @description A form input for a department field.\n *\n * @param {Object} props - The props for the component.\n * @param {Object} props.control - The control object from `react-hook-form`.\n * @returns {React.Component} The rendered `Department` component.\n */\nconst Department = ({ control }) => {\n  return (\n    <div className=\"department\">\n      <Controller\n        name=\"department\"\n        control={control}\n        defaultValue={\"\"}\n        rules={{\n          required: {\n            message: \"Required\",\n            value: true,\n          },\n        }}\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\n          <TextField\n            sx={{\n              \".MuiInputBase-root\": {\n                \"&.Mui-focused fieldset\": {\n                  borderLeftWidth: 6,\n                  padding: \"4px !important\",\n                  transition: \".3s\",\n                },\n              },\n            }}\n            select\n            fullWidth\n            required={true}\n            value={value}\n            id=\"department\"\n            label=\"Department\"\n            aria-label=\"department\"\n            onChange={onChange}\n            error={!!error}\n            helperText={error ? error.message : \" \"}\n          >\n            {departmentCollection.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        )}\n      ></Controller>\n    </div>\n  );\n};\n\nexport default React.memo(Department);\n","import { useForm } from \"react-hook-form\";\nimport React, { useCallback, useState } from \"react\";\n\nimport Calendar from \"../../components/Calendar\";\nimport States from \"../../components/States\";\nimport IdentityInput from \"../../components/Identity\";\nimport Address from \"../../components/Address\";\nimport Departments from \"../../components/Departments\";\n// import Modal from \"../../components/Modal\";\nimport { Modal } from \"cadegancode-reactmodal\";\nimport { Grid } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport Button from \"@mui/material/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { addEmployee } from \"../../slices/employeeSlice\";\nimport \"./home.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [showModal, setShowModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: { isValid },\n  } = useForm({\n    criteriaMode: \"all\",\n    mode: \"onChange\",\n  });\n\n  /* onSubmit V3 */\n  const onSubmit = useCallback(\n    (data) => {\n      dispatch(addEmployee(data));\n      setShowModal(true);\n      reset();\n    },\n    [dispatch, reset]\n  );\n\n  return (\n    <>\n      <div className=\"container\">\n        <form\n          className={classes.pageContent}\n          id=\"create-employee\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Grid container spacing={2} justifyContent=\"center\">\n            <Grid item md={4} xs={10}>\n              <IdentityInput\n                control={control}\n                name=\"firstName\"\n                label=\"First name\"\n              />\n              <IdentityInput\n                control={control}\n                name=\"lastName\"\n                label=\"Last name\"\n              />\n            </Grid>\n            <Grid item md={4} xs={10}>\n              <Calendar\n                control={control}\n                name=\"birthDay\"\n                label=\"Date of Birth\"\n                maxDate={moment().subtract(18, \"years\")}\n              />\n\n              <Calendar control={control} name=\"startDate\" label=\"Start Date\" />\n            </Grid>\n            <Grid item md={8} xs={10}>\n              <p>Address</p>\n              <Address\n                control={control}\n                controllerPattern={\n                  /^(?!.* {2})[A-zÀ-ž0-9_ -.,#']*((-|\\s)*[A-zÀ-ž0-9_ -.,#'])*$/g\n                }\n                inputPropsPattern=\"(?!.* {2})[A-zÀ-ž0-9_ -.,#']*((-|\\s)*[A-zÀ-ž0-9_ -.,#']){2,50}\"\n                minLength=\"2\"\n                maxLength=\"50\"\n                name=\"street\"\n                label=\"Street\"\n              />\n              <Address\n                control={control}\n                controllerPattern={\n                  /^(?!.* {2})[A-zÀ-ž_ -.,#']*((-|\\s)*[A-zÀ-ž_ -.,#'])*$/g\n                }\n                inputPropsPattern=\"(?!.* {2})[A-zÀ-ž_ -.,#']*((-|\\s)*[A-zÀ-ž_ -.,#']){2,50}\"\n                minLength=\"2\"\n                maxLength=\"50\"\n                name=\"city\"\n                label=\"City\"\n              />\n              <States control={control} label=\"States\"></States>\n\n              <Address\n                control={control}\n                controllerPattern={/^(?!.* {2})[_0-9_ -]*((-|\\s)*[_0-9_ -])*$/g}\n                inputPropsPattern=\"(?!.* {2})[0-9_ -]{4,9}\"\n                minLength=\"4\"\n                maxLength=\"9\"\n                name=\"zipCode\"\n                label=\"Zip Code\"\n              />\n              <Departments control={control} />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            color=\"success\"\n            variant=\"contained\"\n            disabled={!isValid}\n            sx={{ mt: 2 }}\n          >\n            Save\n          </Button>\n        </form>\n        <Modal openModal={showModal} closeModal={() => setShowModal(false)}>\n          {\"Employee has been created\"}\n        </Modal>\n      </div>\n    </>\n  );\n}\n"],"names":["Calendar","control","name","label","maxDate","AdapterMoment","useMemo","require","className","LocalizationProvider","dateAdapter","defaultValue","rules","required","message","value","render","field","onChange","fieldState","error","invalid","MobileDatePicker","autoComplete","inputFormat","inputVariant","KeyboardButtonProps","renderInput","params","TextField","id","variant","fullWidth","color","sx","borderLeftWidth","padding","transition","helperText","React","getStatesCollection","abbreviation","useStyles","makeStyles","autocompleteClass","outlinedInputClasses","State","classes","Autocomplete","options","getOptionLabel","option","renderOption","_","IdentityInput","pattern","minLength","maxLength","inputProps","controllerPattern","inputPropsPattern","departmentCollection","Department","select","map","MenuItem","theme","pageContent","margin","spacing","Home","useState","showModal","setShowModal","dispatch","useDispatch","useForm","criteriaMode","mode","handleSubmit","reset","isValid","formState","onSubmit","useCallback","data","addEmployee","Grid","container","justifyContent","item","md","xs","Identity","moment","subtract","States","Departments","Button","type","disabled","mt","openModal","closeModal"],"sourceRoot":""}